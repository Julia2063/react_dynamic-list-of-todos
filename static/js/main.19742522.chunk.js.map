{"version":3,"sources":["types/SortType.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["SortType","TodoList","todos","selectedTodo","selectTodo","className","map","todo","id","title","completed","type","onClick","TodoFilter","selectParametr","handleSelect","query","handleSearch","cleanSearch","value","onChange","all","active","placeholder","length","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getUser","userId","TodoModal","deleteSelectedTodo","useState","loading","setLoading","user","setUser","loadUser","a","loadedUser","Error","useEffect","href","email","name","App","setTodos","setSelectedTodo","setSelectParametr","copyTodos","setCopyTodos","setQuery","loadTodos","loadedTodos","filteredTodos","filter","toLowerCase","includes","event","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.19742522.chunk.js","sourcesContent":["export enum SortType {\n  all = 'all',\n  active = 'active',\n  completed = 'completed',\n}\n","import React from 'react';\n\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[],\n  selectedTodo: Todo | null,\n  selectTodo: (todo: Todo) => void,\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n  selectTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => {\n        const { id, title, completed } = todo;\n\n        return (\n          <tr\n            data-cy=\"todo\"\n            className={(selectedTodo && id === selectedTodo.id)\n              ? 'has-background-info-light'\n              : ''}\n            key={id}\n          >\n            <td className=\"is-vcentered\">{id}</td>\n            {completed ? (\n              <td className=\"is-vcentered\">\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              </td>\n            ) : (\n              <td className=\"is-vcentered\" />\n            )}\n\n            <td className=\"is-vcentered is-expanded\">\n              <p className={completed\n                ? 'has-text-success'\n                : 'has-text-danger'}\n              >\n                {title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => selectTodo(todo)}\n              >\n                <span className=\"icon\">\n                  <i className={\n                    (selectedTodo && id !== selectedTodo.id) || !selectedTodo\n                      ? 'far fa-eye'\n                      : 'far fa-eye-slash'\n                  }\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        );\n      })}\n\n    </tbody>\n  </table>\n);\n","import React from 'react';\n\nimport { SortType } from '../../types/SortType';\n\ninterface Props {\n  selectParametr: string,\n  handleSelect: (selectParametr: React.ChangeEvent<HTMLSelectElement>) => void,\n  query: string;\n  handleSearch: (event: React.ChangeEvent<HTMLInputElement>) => void,\n  cleanSearch: () => void,\n}\n\nexport const TodoFilter: React.FC<Props> = ({\n  selectParametr,\n  handleSelect,\n  query,\n  handleSearch,\n  cleanSearch,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            value={selectParametr}\n            data-cy=\"statusSelect\"\n            onChange={handleSelect}\n          >\n            <option value={SortType.all}>All</option>\n            <option value={SortType.active}>Active</option>\n            <option value={SortType.completed}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleSearch}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query.length > 0 && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              aria-label=\"Mute volume\"\n              onClick={cleanSearch}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  const fullURL = `${BASE_URL + url}.json`;\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\nimport { getUser } from '../../api';\n\ninterface Props {\n  selectedTodo: Todo,\n  deleteSelectedTodo: () => void;\n}\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  deleteSelectedTodo,\n}) => {\n  const [loading, setLoading] = useState(false);\n  const [user, setUser] = useState<User | null>(null);\n\n  const {\n    id,\n    title,\n    completed,\n    userId,\n  } = selectedTodo;\n\n  const loadUser = async () => {\n    setLoading(true);\n\n    try {\n      const loadedUser = await getUser(userId);\n\n      setUser(loadedUser);\n      setLoading(false);\n    } catch {\n      throw new Error('error');\n    }\n  };\n\n  useEffect(() => {\n    loadUser();\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {loading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            <button\n              type=\"button\"\n              aria-label=\"Mute volume\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => deleteSelectedTodo()}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {completed\n                ? (<strong className=\"has-text-success\">Done</strong>)\n                : (<strong className=\"has-text-danger\">Planned</strong>)}\n              {' by '}\n\n              {user && (\n                <a href={`mailto:${user?.email}`}>\n                  {user?.name}\n                </a>\n              )}\n\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\n\nimport { Todo } from './types/Todo';\nimport { SortType } from './types/SortType';\n\nexport const App: React.FC = () => {\n  const [loading, setLoading] = useState(false);\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [selectParametr, setSelectParametr] = useState(SortType.all);\n  const [copyTodos, setCopyTodos] = useState<Todo[]>([]);\n  const [query, setQuery] = useState('');\n\n  const loadTodos = async () => {\n    setLoading(true);\n\n    try {\n      const loadedTodos = await getTodos();\n\n      setTodos(loadedTodos);\n      setLoading(false);\n      setCopyTodos(loadedTodos);\n    } catch (error) {\n      throw new Error('error');\n    }\n  };\n\n  useEffect(() => {\n    loadTodos();\n  }, []);\n\n  const selectTodo = (todo: Todo) => {\n    setSelectedTodo(todo);\n  };\n\n  const deleteSelectedTodo = () => {\n    setSelectedTodo(null);\n  };\n\n  useEffect(() => {\n    const filteredTodos = copyTodos\n      .filter(todo => todo.title.toLowerCase().includes(query.toLowerCase()))\n      .filter(todo => {\n        switch (selectParametr) {\n          case SortType.active:\n            return !todo.completed;\n\n          case SortType.completed:\n            return todo.completed;\n\n          default:\n            return todo;\n        }\n      });\n\n    setTodos(filteredTodos);\n  }, [selectParametr, query, copyTodos]);\n\n  const handleSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const { value } = event.target;\n\n    setSelectParametr(value as SortType);\n  };\n\n  const handleSearch = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    setQuery(value);\n  };\n\n  const cleanSearch = () => {\n    setQuery('');\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                handleSelect={handleSelect}\n                selectParametr={selectParametr}\n                query={query}\n                handleSearch={handleSearch}\n                cleanSearch={cleanSearch}\n              />\n            </div>\n\n            <div className=\"block\">\n              {loading && <Loader />}\n              {(!loading || todos.length !== 0) && (\n                <TodoList\n                  todos={todos}\n                  selectedTodo={selectedTodo}\n                  selectTodo={selectTodo}\n                />\n              )}\n\n            </div>\n          </div>\n        </div>\n      </div>\n      {selectedTodo\n        && (\n          <TodoModal\n            selectedTodo={selectedTodo}\n            deleteSelectedTodo={deleteSelectedTodo}\n          />\n        )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}